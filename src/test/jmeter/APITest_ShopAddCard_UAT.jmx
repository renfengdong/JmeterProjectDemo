<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection-message" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="connectionProperties"></stringProp>
        <stringProp name="dataSource">mysql-message</stringProp>
        <stringProp name="dbUrl">jdbc:mysql://121.36.166.30:3306/biz-center-message?allowMultiQueries=true&amp;useSSL=false</stringProp>
        <stringProp name="driver">com.mysql.cj.jdbc.Driver</stringProp>
        <stringProp name="initQuery"></stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">Yofoto_2020_uat</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">uat</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection-liquidation" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="connectionProperties"></stringProp>
        <stringProp name="dataSource">mysql-liquidation</stringProp>
        <stringProp name="dbUrl">jdbc:mysql://121.36.166.30:3306/biz-center-liquidation?allowMultiQueries=true&amp;useSSL=false</stringProp>
        <stringProp name="driver">com.mysql.cj.jdbc.Driver</stringProp>
        <stringProp name="initQuery"></stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">Yofoto_2020_uat</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">uat</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="本地变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="phoneNUM" elementType="Argument">
            <stringProp name="Argument.name">phoneNUM</stringProp>
            <stringProp name="Argument.value">19000000007</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="shopcode" elementType="Argument">
            <stringProp name="Argument.name">shopcode</stringProp>
            <stringProp name="Argument.value">AHH1053</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">BJA1001</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="uat测试环境" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">mallapi.uat.yofoto.cn</stringProp>
        <stringProp name="HTTPSampler.port">80</stringProp>
        <stringProp name="HTTPSampler.protocol">http</stringProp>
        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp线程组" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </SetupThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login/shopLogin" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;shopUserType&quot;:&quot;3&quot;,&quot;userName&quot;:&quot;${shopcode}&quot;,&quot;password&quot;:&quot;QWExMTExMTE&quot;,&quot;loginType&quot;:5}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">storeapi.uat.yofoto.cn</stringProp>
          <stringProp name="HTTPSampler.port">80</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">biz-store-application/api/v1/user/login/shopLogin</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">MTIzNFFx=1234Qq</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="默认信息头" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Host" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">storeapi.uat.yofoto.cn</stringProp>
              </elementProp>
              <elementProp name="channel" elementType="Header">
                <stringProp name="Header.name">channel</stringProp>
                <stringProp name="Header.value">b2c_web_pc</stringProp>
              </elementProp>
              <elementProp name="Connection" elementType="Header">
                <stringProp name="Header.name">Connection</stringProp>
                <stringProp name="Header.value">keep-alive</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="token" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;

String Str = &quot;\&quot;resultMsg\&quot;:\&quot;登录成功\&quot;&quot;;

response = prev.getResponseDataAsString();

if(response.contains(Str)==false){
	Failure = true;
	FailureMessage =  response;
	
	log.error(&quot;返回报文异常：&quot;+response);
}
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 后置处理程序" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">${__setProperty(tokenN,${token},)};</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="店铺代客开卡-UAT环境" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">500</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1000</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="TestPlan.comments">场中中同一店铺账号不能有未支付的订单</stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="随机生成测试数据" enabled="true"/>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="随机生成公司名称" enabled="false">
            <stringProp name="BeanShellSampler.query">import java.io.UnsupportedEncodingException;
import java.util.Random;

public class Random_str {

    //生成随机用户名，数字和字母组成
    public static String getStringRandom(int length) {
        StringBuilder val = new StringBuilder();
        Random random = new Random();
        for (int i = 0; i &lt; length; i++) {
            String charOrNum = random.nextInt(2) % 2 == 0 ? &quot;char&quot; : &quot;num&quot;;
            //输出字母还是数字
            if (&quot;char&quot;.equalsIgnoreCase(charOrNum)) {
                //输出是大写字母还是小写字母
                int temp = random.nextInt(2) % 2 == 0 ? 65 : 97;
                val.append((char) (random.nextInt(26) + temp));
            } else {
                val.append((random.nextInt(10)));
            }
        }
        return val.toString();
    }
    
    //生成随机中文名称,
    public static String randomName(int length) {
        StringBuilder ret = new StringBuilder();
        for (int i = 0; i &lt; length; i++) {
            String str = null;
            Random random = new Random();
            // 获取高位值
            int highPos = (176 + Math.abs(random.nextInt(39)));
            // 获取低位值
            int lowPos = (161 + Math.abs(random.nextInt(93)));
            byte[] b = new byte[2];
            b[0] = (new Integer(highPos).byteValue());
            b[1] = (new Integer(lowPos).byteValue());
            try {
                // 转成中文
                str = new String(b, &quot;GBk&quot;);
            } catch (UnsupportedEncodingException ex) {
                ex.printStackTrace();
            }
            ret.append(str);
        }
        return ret.toString();
    }
}

Random_str ran = new Random_str();
String getStringRandom = ran.getStringRandom(6);;//此处生成的是长度为6的名称(数字和字母)
String getCompanyName = ran.randomName(5) +&quot;分店&quot;;//此处生成的是长度为5的汉字
String getCnName =ran.randomName(3);
String getCnName2 =ran.randomName(2);
vars.put(&quot;getStringRandom&quot;,getStringRandom);
vars.put(&quot;getCompanyName&quot;,getCompanyName);
vars.put(&quot;getName&quot;,getCnName);
vars.put(&quot;getName2&quot;,getCnName2);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="获取不同的时间" enabled="false">
            <stringProp name="BeanShellSampler.query">import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

public class GetTime{
    /**
     * 获取当前日期
     *
     * @return
     */
    public static String getcurrentDate() {
        Date currentTime = new Date();
        SimpleDateFormat formatter = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
        String currentDate = formatter.format(currentTime);
        return currentDate;
    }

    /**
     * 获取当前日期的下一个月
     *
     * @return
     */
    public static String getDateAddMonth() {
        String year_month_day = &quot;yyyy-MM-dd&quot;;
        SimpleDateFormat dgt = new SimpleDateFormat(year_month_day);
        Calendar date = Calendar.getInstance();
        date.add(Calendar.MONTH, Integer.parseInt(&quot;1&quot;));
        String endDate = dgt.format(date.getTime());
        return endDate;
    }
    
    /**
     * 获取当前日期的下一年上一天
     *
     * @return
     */
	public static String getDateNextYear() {
		Calendar cale = Calendar.getInstance();
		Date currentTime = new Date();
		cale.setTime(currentTime);
		cale.add(Calendar.YEAR, 1);
		cale.add(Calendar.DATE, -1);
		SimpleDateFormat formatter = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
		String dayNextYear=formatter.format(cale.getTime());
		return dayNextYear;
    	}

    /**
     * 获取当前日期减一天
     *
     * @return
     */
    public static String getDateBeforeDay() {
        Calendar c = Calendar.getInstance();
        Date date = null;
        Date currentTime = new Date();
        SimpleDateFormat formatter = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
        String a = formatter.format(currentTime);
        try {
            date = new SimpleDateFormat(&quot;yy-MM-dd&quot;).parse(a);
        } catch (ParseException e) {
            e.printStackTrace();
        }
        c.setTime(date);
        int day = c.get(Calendar.DATE);
        c.set(Calendar.DATE, day - 1);
        String dayBefroe = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;).format(c.getTime());
        return dayBefroe;
    }
    
        /**
     * 获取当前日期加两天
     *
     * @return
     */
    public static String getDateNextDay() {
        Calendar c = Calendar.getInstance();
        Date date = null;
        Date currentTime = new Date();
        SimpleDateFormat formatter = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
        String a = formatter.format(currentTime);
        try {
            date = new SimpleDateFormat(&quot;yy-MM-dd&quot;).parse(a);
        } catch (ParseException e) {
            e.printStackTrace();
        }
        c.setTime(date);
        int day = c.get(Calendar.DATE);
        c.set(Calendar.DATE, day + 1);
        String dayNext = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;).format(c.getTime());
        return dayNext;
    }
}

String getNextDay = GetTime.getDateNextDay();
String getNextMonth = GetTime.getDateAddMonth();
String getBeforeDay = GetTime.getDateBeforeDay();
String getDayNextYear=GetTime.getDateNextYear();
//vars.put(&quot;getBeforeDay&quot;,getBeforeDay);
vars.put(&quot;getNextDay&quot;,getNextDay);
vars.put(&quot;getNextMonth&quot;,getNextMonth);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="随机获取Email和手机号" enabled="true">
            <stringProp name="BeanShellSampler.query">import java.util.HashMap;
import java.util.Map;
import java.text.SimpleDateFormat;
import java.util.Date;

	/**
	 * 随机生成Email，手机号
	 */

	public String base = &quot;abcdefghijklmnopqrstuvwxyz0123456789&quot;;

	private final String[] email_suffix = &quot;@${environment}.com&quot;.split(&quot;,&quot;);

	public int getNum(int start, int end) {
		return (int) (Math.random() * (end - start + 1) + start);
	}


	/**
	 * 返回Email
	 */
	private String getEmail(int lMin, int lMax) {
		int length = getNum(lMin, lMax);
		StringBuffer sb = new StringBuffer();
		for (int i = 0; i &lt; length; i++) {
			int number = (int) (Math.random() * base.length());
			sb.append(base.charAt(number));
		}
		sb.append(email_suffix[(int) (Math.random() * email_suffix.length)]);
		return sb.toString();
	}

	/**
	 * 返回手机号码
	 */
	private String[] telFirst = &quot;134,135,136,137,138,139,150,151,152,157,158,159,130,131,132,155,156,133,153&quot;.split(&quot;,&quot;);

	private String getTel() {
		int index = getNum(0, telFirst.length - 1);
		String first = telFirst[index];
		String second = String.valueOf(getNum(1, 888) + 10000).substring(1);
		String thrid = String.valueOf(getNum(1, 9100) + 10000).substring(1);
		return first + second + thrid;
	}


	/**
	 * 数据封装
	 * 
	 * @return
	 */

	public String getTelPhone() {

		return getTel();

	}

	public String getTelPhone2() {

		return getTel();

	}

	public String getEmails() {
		return getEmail(6, 9);

	}
/////////////////////////////////////////////////////////////////////////////////////////////////////////

	vars.put(&quot;phoneNUM&quot;,getTelPhone());
	//vars.put(&quot;getTelPhone2&quot;,getTelPhone2());
	//vars.put(&quot;getEmails&quot;,getEmails());

</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="随机生成身份证号" enabled="true">
            <stringProp name="BeanShellSampler.query">import com.shenfen.IdCardGenerator;
String getCard=IdCardGenerator.getIdCard();
vars.put(&quot;idNumber&quot;,getCard);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="我的店铺" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="info/getUserInfo" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">storeapi.uat.yofoto.cn</stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">biz-store-application/api/v1/store/info/get/store_info</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="默认信息头" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">storeapi.uat.yofoto.cn</stringProp>
                </elementProp>
                <elementProp name="channel" elementType="Header">
                  <stringProp name="Header.name">channel</stringProp>
                  <stringProp name="Header.value">b2c_web_pc</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Access-Token" elementType="Header">
                  <stringProp name="Header.name">Access-Token</stringProp>
                  <stringProp name="Header.value">${__P(tokenN,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="cardCode" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">cardCode</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.cardCode</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;

String Str = &quot;\&quot;resultMsg\&quot;:\&quot;success\&quot;&quot;;

response = prev.getResponseDataAsString();

if(response.contains(Str)==false){
	Failure = true;
	FailureMessage =  response;
	
	log.error(&quot;返回报文异常：&quot;+response);
}
</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="新客注册" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getVerifyCode" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="phone" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${phoneNUM}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">phone</stringProp>
                </elementProp>
                <elementProp name="codeType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">codeType</stringProp>
                </elementProp>
                <elementProp name="descriptionType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">descriptionType</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">biz-mall-application/v1/user/verifyCode/getVerifyCode</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="uniqueId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">uniqueId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.uniqueId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;

String Str = &quot;\&quot;resultMsg\&quot;:\&quot;短信验证码发送成功,30分钟有效\&quot;&quot;;

response = prev.getResponseDataAsString();

if(response.contains(Str)==false){
	Failure = true;
	FailureMessage =  response;
	
	log.error(&quot;返回报文异常：&quot;+response);
}
</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="默认信息头" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">mallapi.uat.yofoto.cn</stringProp>
                </elementProp>
                <elementProp name="channel" elementType="Header">
                  <stringProp name="Header.name">channel</stringProp>
                  <stringProp name="Header.value">b2c_web_pc</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Access-Token" elementType="Header">
                  <stringProp name="Header.name">Access-Token</stringProp>
                  <stringProp name="Header.value">${__P(tokenN,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC-获取验证码" enabled="true">
            <stringProp name="dataSource">mysql-message</stringProp>
            <stringProp name="query">select * from s_message_0 where targets = ${phoneNUM} union 
select * from s_message_1 where targets = ${phoneNUM} union 
select * from s_message_2 where targets = ${phoneNUM} union 
select * from s_message_3 where targets = ${phoneNUM} union 
select * from s_message_4 where targets = ${phoneNUM} union 
select * from s_message_5 where targets = ${phoneNUM} union 
select * from s_message_6 where targets = ${phoneNUM} union 
select * from s_message_7 where targets = ${phoneNUM} union 
select * from s_message_8 where targets = ${phoneNUM} union 
select * from s_message_9 where targets = ${phoneNUM}
order by send_time desc </stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultVariable">results</stringProp>
            <stringProp name="variableNames"></stringProp>
          </JDBCSampler>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取verifyCode" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">verifyCode</stringProp>
              <stringProp name="RegexExtractor.regex">验证码(\d+)，</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">null</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果（If）控制器" enabled="true">
            <stringProp name="IfController.condition">${verifyCode} != null</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="新客注册" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="confirmOrRegister" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;phone&quot;: &quot;${phoneNUM}&quot;,&#xd;
	&quot;verifyCode&quot;: &quot;${verifyCode}&quot;,&#xd;
	&quot;uniqueId&quot;: &quot;${uniqueId}&quot;,&#xd;
	&quot;channel&quot;: &quot;1&quot;,&#xd;
	&quot;codeType&quot;: &quot;2&quot;,&#xd;
	&quot;descriptionType&quot;: 1&#xd;
}    </stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/biz-mall-application/v1/user/register/confirmOrRegister</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;

String Str = &quot;\&quot;resultMsg\&quot;:\&quot;success\&quot;&quot;;

response = prev.getResponseDataAsString();

if(response.contains(Str)==false){
	Failure = true;
	FailureMessage =  response;
	
	log.error(&quot;返回报文异常：&quot;+response);
}
</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="userId" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">userId</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="默认信息头" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">mallapi.uat.yofoto.cn</stringProp>
                    </elementProp>
                    <elementProp name="channel" elementType="Header">
                      <stringProp name="Header.name">channel</stringProp>
                      <stringProp name="Header.value">b2c_web_pc</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="Access-Token" elementType="Header">
                      <stringProp name="Header.name">Access-Token</stringProp>
                      <stringProp name="Header.value">${__P(tokenN,)}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="true">
                <stringProp name="dataSource">mysql-liquidation</stringProp>
                <stringProp name="query">UPDATE  st_biz_account  set balance=88887777  where user_id=&quot;${userId}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-234430262">updates</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="代客开卡" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[开卡]queryCardType" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;bizValetCardReqDto&quot;: {&#xd;
		&quot;helpUserId&quot;: &quot;${userId}&quot;,&#xd;
		&quot;healthConsultantNum&quot;: &quot;${cardCode}&quot;,&#xd;
		&quot;saleConsultantNum&quot;: &quot;${cardCode}&quot;,&#xd;
		&quot;realName&quot;: &quot;大东哥&quot;,&#xd;
		&quot;identityType&quot;: 4,&#xd;
		&quot;identityCard&quot;: &quot;${idNumber}&quot;,&#xd;
		&quot;nation&quot;: &quot;1&quot;,&#xd;
		&quot;agree&quot;: true,&#xd;
		&quot;sex&quot;: 0,&#xd;
		&quot;birthday&quot;: &quot;1985-09-06&quot;,&#xd;
		&quot;channel&quot;: &quot;2&quot;,&#xd;
		&quot;isEntityCard&quot;: 0,&#xd;
		&quot;password&quot;: &quot;MTIzNFFx&quot;&#xd;
	}&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">storeapi.uat.yofoto.cn</stringProp>
                <stringProp name="HTTPSampler.port">80</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">biz-store-application/api/v1/valetOpenCard/queryCardType</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">第一个开卡人的身份证：440129195606246084</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell-身份证" enabled="false">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">import com.cmcc.*;

String IdCard = IdGen.generateId();
String myname = CreateName.getName();
log.info(&quot;============cardId===========&quot;+IdCard);
log.info(&quot;============myname===========&quot;+myname);
vars.put(&quot;idNumber&quot;,IdCard);
vars.put(&quot;name&quot;,myname);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;

String Str = &quot;\&quot;resultMsg\&quot;:\&quot;success\&quot;&quot;;

response = prev.getResponseDataAsString();

if(response.contains(Str)==false){
	Failure = true;
	FailureMessage =  response;
	
	log.error(&quot;返回报文异常：&quot;+response);
}
</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="默认信息头" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">storeapi.uat.yofoto.cn</stringProp>
                    </elementProp>
                    <elementProp name="channel" elementType="Header">
                      <stringProp name="Header.name">channel</stringProp>
                      <stringProp name="Header.value">b2c_web_pc</stringProp>
                    </elementProp>
                    <elementProp name="Connection" elementType="Header">
                      <stringProp name="Header.name">Connection</stringProp>
                      <stringProp name="Header.value">keep-alive</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="Access-Token" elementType="Header">
                      <stringProp name="Header.name">Access-Token</stringProp>
                      <stringProp name="Header.value">${__P(tokenN,)}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="核对订单" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="confirmValetOpenCardOrder" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;benefitReqDtos&quot;: [{&#xd;
		&quot;benefitId&quot;: &quot;1253063345500887040&quot;,&#xd;
		&quot;itemId&quot;: &quot;1245799716267251724&quot;,&#xd;
		&quot;skuId&quot;: &quot;1245799716277737522&quot;,&#xd;
		&quot;skuNum&quot;: 1&#xd;
	}],&#xd;
	&quot;confirmReqDto&quot;: {&#xd;
		&quot;items&quot;: [{&#xd;
			&quot;itemNum&quot;: 1,&#xd;
			&quot;itemPrice&quot;: 1700,&#xd;
			&quot;itemSerial&quot;: &quot;1245799716267251724&quot;,&#xd;
			&quot;skuSerial&quot;: &quot;1245799716277737522&quot;&#xd;
		}],&#xd;
		&quot;bizGiveawayReqDto&quot;: {&#xd;
			&quot;freeItem&quot;: [],&#xd;
			&quot;giftList&quot;: []&#xd;
		},&#xd;
		&quot;orderType&quot;: 3,&#xd;
		&quot;channel&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;bizValetCardReqDto&quot;: {&#xd;
		&quot;helpUserId&quot;: &quot;${userId}&quot;,&#xd;
		&quot;healthConsultantNum&quot;: &quot;${cardCode}&quot;,&#xd;
		&quot;saleConsultantNum&quot;: &quot;${cardCode}&quot;,&#xd;
		&quot;realName&quot;: &quot;大东哥&quot;,&#xd;
		&quot;identityType&quot;: 4,&#xd;
		&quot;identityCard&quot;: &quot;${idNumber}&quot;,&#xd;
		&quot;nation&quot;: &quot;1&quot;,&#xd;
		&quot;agree&quot;: true,&#xd;
		&quot;sex&quot;: 0,&#xd;
		&quot;birthday&quot;: &quot;1985-09-06&quot;,&#xd;
		&quot;channel&quot;: &quot;2&quot;,&#xd;
		&quot;isEntityCard&quot;: 0,&#xd;
		&quot;password&quot;: &quot;MTIzNFFx&quot;&#xd;
	}&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">storeapi.uat.yofoto.cn</stringProp>
                <stringProp name="HTTPSampler.port">80</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">biz-store-application/api/v1/valetOpenCard/confirmValetOpenCardOrder</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="默认信息头" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">storeapi.uat.yofoto.cn</stringProp>
                    </elementProp>
                    <elementProp name="Access-Token" elementType="Header">
                      <stringProp name="Header.name">Access-Token</stringProp>
                      <stringProp name="Header.value">${__P(tokenN,)}</stringProp>
                    </elementProp>
                    <elementProp name="channel" elementType="Header">
                      <stringProp name="Header.name">channel</stringProp>
                      <stringProp name="Header.value">b2c_web_pc</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;

String Str = &quot;\&quot;resultMsg\&quot;:\&quot;success\&quot;&quot;;

response = prev.getResponseDataAsString();

if(response.contains(Str)==false){
	Failure = true;
	FailureMessage =  response;
	
	log.error(&quot;返回报文异常：&quot;+response);
}
</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="submitValetOpenCardOrder" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;confirmReqDto&quot;: {&#xd;
		&quot;items&quot;: [{&#xd;
			&quot;itemNum&quot;: 1,&#xd;
			&quot;itemPrice&quot;: 1700,&#xd;
			&quot;itemSerial&quot;: &quot;1245799716267251724&quot;,&#xd;
			&quot;skuSerial&quot;: &quot;1245799716277737522&quot;&#xd;
		}],&#xd;
		&quot;bizGiveawayReqDto&quot;: {&#xd;
			&quot;freeItem&quot;: [],&#xd;
			&quot;giftList&quot;: []&#xd;
		},&#xd;
		&quot;orderType&quot;: 3,&#xd;
		&quot;channel&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;bizValetCardReqDto&quot;: {&#xd;
		&quot;helpUserId&quot;: &quot;${userId}&quot;,&#xd;
		&quot;healthConsultantNum&quot;: &quot;${cardCode}&quot;,&#xd;
		&quot;saleConsultantNum&quot;: &quot;${cardCode}&quot;,&#xd;
		&quot;realName&quot;: &quot;大东哥&quot;,&#xd;
		&quot;identityType&quot;: 4,&#xd;
		&quot;identityCard&quot;: &quot;${idNumber}&quot;,&#xd;
		&quot;nation&quot;: &quot;1&quot;,&#xd;
		&quot;agree&quot;: true,&#xd;
		&quot;sex&quot;: 0,&#xd;
		&quot;birthday&quot;: &quot;1985-09-06&quot;,&#xd;
		&quot;channel&quot;: &quot;2&quot;,&#xd;
		&quot;isEntityCard&quot;: 0,&#xd;
		&quot;password&quot;: &quot;MTIzNFFx&quot;&#xd;
	},&#xd;
	&quot;benefitReqDtos&quot;: [{&#xd;
		&quot;benefitId&quot;: &quot;1253063345500887040&quot;,&#xd;
		&quot;itemId&quot;: &quot;1245799716267251724&quot;,&#xd;
		&quot;skuId&quot;: &quot;1245799716277737522&quot;,&#xd;
		&quot;skuNum&quot;: 1&#xd;
	}],&#xd;
	&quot;createOrderReqDto&quot;: {&#xd;
		&quot;channel&quot;: &quot;&quot;,&#xd;
		&quot;companyId&quot;: &quot;&quot;,&#xd;
		&quot;deliveryAddress&quot;: {&#xd;
			&quot;address&quot;: &quot;啥都会合适的卡卡&quot;,&#xd;
			&quot;areaCode&quot;: &quot;330212000000&quot;,&#xd;
			&quot;areaName&quot;: &quot;鄞州区&quot;,&#xd;
			&quot;cityCode&quot;: &quot;330200000000&quot;,&#xd;
			&quot;cityName&quot;: &quot;宁波市&quot;,&#xd;
			&quot;deliveryMobile&quot;: &quot;18606696327&quot;,&#xd;
			&quot;deliveryName&quot;: &quot;哈哈&quot;,&#xd;
			&quot;detailed&quot;: &quot;浙江省宁波市鄞州区啥都会合适的卡卡&quot;,&#xd;
			&quot;geoX&quot;: 121.550357,&#xd;
			&quot;geoY&quot;: 29.874556,&#xd;
			&quot;provinceCode&quot;: &quot;330000000000&quot;,&#xd;
			&quot;provinceName&quot;: &quot;浙江省&quot;,&#xd;
			&quot;streetCode&quot;: &quot;&quot;,&#xd;
			&quot;streetName&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;deliveryType&quot;: &quot;1&quot;,&#xd;
		&quot;orderBv&quot;: 1400,&#xd;
		&quot;orderItems&quot;: [{&#xd;
			&quot;bv&quot;: 1400,&#xd;
			&quot;code&quot;: &quot;LB651&quot;,&#xd;
			&quot;itemNum&quot;: 1,&#xd;
			&quot;itemPrice&quot;: 1700,&#xd;
			&quot;itemSerial&quot;: &quot;1245799716267251724&quot;,&#xd;
			&quot;skuSerial&quot;: &quot;1245799716277737522&quot;,&#xd;
			&quot;totalAmount&quot;: 1700,&#xd;
			&quot;child&quot;: [{&#xd;
				&quot;bv&quot;: 154,&#xd;
				&quot;child&quot;: null,&#xd;
				&quot;code&quot;: &quot;SQ021&quot;,&#xd;
				&quot;detail&quot;: null,&#xd;
				&quot;discountBv&quot;: 154,&#xd;
				&quot;discountPrice&quot;: 188,&#xd;
				&quot;extFields&quot;: {},&#xd;
				&quot;imgUrl&quot;: &quot;https://bucket-prod.obs.cn-east-2.myhuaweicloud.com/direct_prod/BkE3FJZYjt.jpg&quot;,&#xd;
				&quot;install&quot;: null,&#xd;
				&quot;itemName&quot;: &quot;御坊堂食用菌螺旋藻压片糖果&quot;,&#xd;
				&quot;itemNum&quot;: 1,&#xd;
				&quot;itemPrice&quot;: 188,&#xd;
				&quot;itemSerial&quot;: &quot;1245704855650400323&quot;,&#xd;
				&quot;itemStatus&quot;: 1,&#xd;
				&quot;itemType&quot;: 1,&#xd;
				&quot;limitNum&quot;: 0,&#xd;
				&quot;qualificationStatus&quot;: 1,&#xd;
				&quot;repair&quot;: null,&#xd;
				&quot;repertoryStatus&quot;: 1,&#xd;
				&quot;skuCode&quot;: null,&#xd;
				&quot;skuSerial&quot;: &quot;1245704855677663283&quot;,&#xd;
				&quot;totalAmount&quot;: 188,&#xd;
				&quot;totalBV&quot;: 154,&#xd;
				&quot;totalDiscountAmount&quot;: 188,&#xd;
				&quot;totalDiscountBv&quot;: 154,&#xd;
				&quot;unit&quot;: &quot;瓶&quot;,&#xd;
				&quot;versionId&quot;: &quot;1262470259622053933&quot;&#xd;
			}, {&#xd;
				&quot;bv&quot;: 1037,&#xd;
				&quot;child&quot;: null,&#xd;
				&quot;code&quot;: &quot;SQ053&quot;,&#xd;
				&quot;detail&quot;: null,&#xd;
				&quot;discountBv&quot;: 1037,&#xd;
				&quot;discountPrice&quot;: 1497,&#xd;
				&quot;extFields&quot;: {},&#xd;
				&quot;imgUrl&quot;: &quot;https://bucket-prod.obs.cn-east-2.myhuaweicloud.com/direct_prod/K5nPpNNzDd.jpg&quot;,&#xd;
				&quot;install&quot;: null,&#xd;
				&quot;itemName&quot;: &quot;脂达人代餐食品21日装&quot;,&#xd;
				&quot;itemNum&quot;: 1,&#xd;
				&quot;itemPrice&quot;: 1497,&#xd;
				&quot;itemSerial&quot;: &quot;1245704573551941744&quot;,&#xd;
				&quot;itemStatus&quot;: 1,&#xd;
				&quot;itemType&quot;: 1,&#xd;
				&quot;limitNum&quot;: 0,&#xd;
				&quot;qualificationStatus&quot;: 1,&#xd;
				&quot;repair&quot;: null,&#xd;
				&quot;repertoryStatus&quot;: 1,&#xd;
				&quot;skuCode&quot;: null,&#xd;
				&quot;skuSerial&quot;: &quot;1245704573569767528&quot;,&#xd;
				&quot;totalAmount&quot;: 1497,&#xd;
				&quot;totalBV&quot;: 1037,&#xd;
				&quot;totalDiscountAmount&quot;: 1497,&#xd;
				&quot;totalDiscountBv&quot;: 1037,&#xd;
				&quot;unit&quot;: &quot;盒&quot;,&#xd;
				&quot;versionId&quot;: &quot;1262920496564155498&quot;&#xd;
			}, {&#xd;
				&quot;bv&quot;: 3,&#xd;
				&quot;child&quot;: null,&#xd;
				&quot;code&quot;: &quot;WD147&quot;,&#xd;
				&quot;detail&quot;: null,&#xd;
				&quot;discountBv&quot;: 3,&#xd;
				&quot;discountPrice&quot;: 36.99,&#xd;
				&quot;extFields&quot;: {},&#xd;
				&quot;imgUrl&quot;: null,&#xd;
				&quot;install&quot;: null,&#xd;
				&quot;itemName&quot;: &quot;东方素养摇摇杯-绿色&quot;,&#xd;
				&quot;itemNum&quot;: 1,&#xd;
				&quot;itemPrice&quot;: 36.99,&#xd;
				&quot;itemSerial&quot;: &quot;1245992657797599285&quot;,&#xd;
				&quot;itemStatus&quot;: 1,&#xd;
				&quot;itemType&quot;: 1,&#xd;
				&quot;limitNum&quot;: 0,&#xd;
				&quot;qualificationStatus&quot;: 1,&#xd;
				&quot;repair&quot;: null,&#xd;
				&quot;repertoryStatus&quot;: 1,&#xd;
				&quot;skuCode&quot;: null,&#xd;
				&quot;skuSerial&quot;: &quot;1245992657809133601&quot;,&#xd;
				&quot;totalAmount&quot;: 36.99,&#xd;
				&quot;totalBV&quot;: 3,&#xd;
				&quot;totalDiscountAmount&quot;: 36.99,&#xd;
				&quot;totalDiscountBv&quot;: 3,&#xd;
				&quot;unit&quot;: &quot;个&quot;,&#xd;
				&quot;versionId&quot;: &quot;1262484460270761081&quot;&#xd;
			}],&#xd;
			&quot;detail&quot;: null,&#xd;
			&quot;discountBv&quot;: 1400,&#xd;
			&quot;discountPrice&quot;: 1700,&#xd;
			&quot;extFields&quot;: {},&#xd;
			&quot;imgUrl&quot;: &quot;https://bucket-prod.obs.cn-east-2.myhuaweicloud.com/direct_prod/WdH7hbfXDh.jpg&quot;,&#xd;
			&quot;install&quot;: null,&#xd;
			&quot;itemName&quot;: &quot;脂达人礼包&quot;,&#xd;
			&quot;itemStatus&quot;: 1,&#xd;
			&quot;itemType&quot;: 2,&#xd;
			&quot;limitNum&quot;: 0,&#xd;
			&quot;qualificationStatus&quot;: 1,&#xd;
			&quot;repair&quot;: null,&#xd;
			&quot;repertoryStatus&quot;: 0,&#xd;
			&quot;skuCode&quot;: null,&#xd;
			&quot;totalBV&quot;: 1400,&#xd;
			&quot;totalDiscountAmount&quot;: 1700,&#xd;
			&quot;totalDiscountBv&quot;: 1400,&#xd;
			&quot;unit&quot;: &quot;套&quot;,&#xd;
			&quot;versionId&quot;: &quot;1248516859565954110&quot;&#xd;
		}],&#xd;
		&quot;orderType&quot;: &quot;3&quot;,&#xd;
		&quot;orderProperty&quot;: 1,&#xd;
		&quot;orderSource&quot;: &quot;SHOP&quot;,&#xd;
		&quot;payAmount&quot;: 1700,&#xd;
		&quot;realName&quot;: &quot;&quot;,&#xd;
		&quot;shopCart&quot;: 0,&#xd;
		&quot;shopId&quot;: &quot;&quot;,&#xd;
		&quot;shopCode&quot;: &quot;AHH1053&quot;,&#xd;
		&quot;totalAmount&quot;: 1700,&#xd;
		&quot;totalBv&quot;: 1400,&#xd;
		&quot;totalItemNum&quot;: 1,&#xd;
		&quot;userCode&quot;: &quot;&quot;,&#xd;
		&quot;bizGiveawayReqDto&quot;: {&#xd;
			&quot;freeItem&quot;: [],&#xd;
			&quot;giftList&quot;: []&#xd;
		}&#xd;
	}&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">storeapi.uat.yofoto.cn</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">biz-store-application/api/v1/valetOpenCard/submitValetOpenCardOrder</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="默认信息头" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">storeapi.uat.yofoto.cn</stringProp>
                    </elementProp>
                    <elementProp name="Access-Token" elementType="Header">
                      <stringProp name="Header.name">Access-Token</stringProp>
                      <stringProp name="Header.value">${__P(tokenN,)}</stringProp>
                    </elementProp>
                    <elementProp name="channel" elementType="Header">
                      <stringProp name="Header.name">channel</stringProp>
                      <stringProp name="Header.value">b2c_web_pc</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="tradeNo" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">tradeNo</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;

String Str = &quot;\&quot;resultMsg\&quot;:\&quot;success\&quot;&quot;;

response = prev.getResponseDataAsString();

if(response.contains(Str)==false){
	Failure = true;
	FailureMessage =  response;
	
	log.error(&quot;返回报文异常：&quot;+response);
}
</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="支付列表" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="pay/goway" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">biz-mall-application/v1/tradecore/trade/pay/goway?orderType=3&amp;tradeNo=${tradeNo}tradeType=PAY</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;

String Str = &quot;\&quot;resultMsg\&quot;:\&quot;success\&quot;&quot;;

response = prev.getResponseDataAsString();

if(response.contains(Str)==false){
	Failure = true;
	FailureMessage =  response;
	
	log.error(&quot;返回报文异常：&quot;+response);
}
</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="默认信息头" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">mallapi.uat.yofoto.cn</stringProp>
                    </elementProp>
                    <elementProp name="channel" elementType="Header">
                      <stringProp name="Header.name">channel</stringProp>
                      <stringProp name="Header.value">b2c_web_pc</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="Access-Token" elementType="Header">
                      <stringProp name="Header.name">Access-Token</stringProp>
                      <stringProp name="Header.value">${__P(tokenN,)}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="order/pay" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;backUrl&quot;: &quot;&quot;,&#xd;
	&quot;bankType&quot;: &quot;&quot;,&#xd;
	&quot;ip&quot;: &quot;&quot;,&#xd;
	&quot;accountType&quot;: &quot;SHOP&quot;,&#xd;
	&quot;payway&quot;: &quot;WALLET&quot;,&#xd;
	&quot;payPassword&quot;: &quot;MTQ3MjU4&quot;,&#xd;
	&quot;payType&quot;: &quot;102&quot;,&#xd;
	&quot;tradeNo&quot;: &quot;${tradeNo}&quot;,&#xd;
	&quot;walletPay&quot;: true,&#xd;
	&quot;tradeType&quot;: &quot;PAY&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">biz-mall-application/v1/biz/tradecore/order/pay</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">MTIzMzIx=123321</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;

String Str = &quot;\&quot;resultMsg\&quot;:\&quot;success\&quot;&quot;;

response = prev.getResponseDataAsString();

if(response.contains(Str)==false){
	Failure = true;
	FailureMessage =  response;
	
	log.error(&quot;返回报文异常：&quot;+response);
}
</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="默认信息头" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">mallapi.uat.yofoto.cn</stringProp>
                    </elementProp>
                    <elementProp name="channel" elementType="Header">
                      <stringProp name="Header.name">channel</stringProp>
                      <stringProp name="Header.value">b2c_web_pc</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="Access-Token" elementType="Header">
                      <stringProp name="Header.name">Access-Token</stringProp>
                      <stringProp name="Header.value">${__P(tokenN,)}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">C:\Users\renfe\Desktop\log.txt</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
